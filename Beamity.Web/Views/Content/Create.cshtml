@model Beamity.Web.Models.CreateContentViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3 class="m-1">Create a new content</h3>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-row">
                <div class="form-group col">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" id="inputName" class="form-control" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group col">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" id="inputTitle" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" id="inputDescription" style="height:240px;" maxlength="100" class="form-control" required></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group col">
                    <label asp-for="Text" class="control-label"></label>
                    <textarea asp-for="Text" type="text" id="inputText" style="height:240px;" class="form-control"></textarea>
                    <span asp-validation-for="Text" class="text-danger"></span>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col">
                    <label asp-for="MainImage" class="control-label">Main Image</label>
                    <input asp-for="MainImage" type="file" style="background-color:#0069D9" class="file" id="mainImage" required name="files" />
                </div>
                <div class="form-group col">
                    <label asp-for="SlideImage" class="control-label">Slide Image</label>
                    <input asp-for="SlideImage" type="file" style="background-color:#0069D9" id="slideImage" name="slide" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label asp-for="Video" class="control-label">Video</label>
                    <input asp-for="Video" type="file" style="background-color:#0069D9" id="video" name="video" />
                </div>
                <div class="form-group col">
                    <label asp-for="Audio" class="control-label">Audio</label>
                    <input asp-for="Audio" type="file" style="background-color:#0069D9" id="audio" name="audio" />
                </div>
            </div>


            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" id="isHome" asp-for="IsHomePage" /> @Html.DisplayNameFor(model => model.IsHomePage)
                </label>
            </div>

        </form>
        <div class="form-group">
            <input type="button" id="create" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js">

</script>
<script src="bootstrap/js/bootstrap.min.js"></script>

<script type="text/javascript">


    function swalload() {
        swal.fire({
            title: 'Loading....',
            html: 'Please wait during the processing time',
            timer: 100000,
            onBeforeOpen: () => {
                Swal.showLoading()
                timerInterval = setInterval(() => {
                    Swal.getContent().querySelector('strong')
                        .textContent = Swal.getTimerLeft()
                }, 100)
            },
            onClose: () => {

            }
        });
    }
    $("#create").click(function () {
        swalload();
        var options = {};
        options.url = '/Content/Create';
        options.type = "POST";
        var obj = new FormData();
        obj.append('Name', $("#inputName").val());
        obj.append('Title', $("#inputTitle").val());
        obj.append('Description', $("#inputDescription").val());
        obj.append('MainImage', $("#mainImage")[0].files[0]);
        obj.append('SlideImage', $("#slideImage")[0].files[0]);
        obj.append('Video', $("#video")[0].files[0]);
        obj.append('Audio', $("#audio")[0].files[0]);
        obj.append('Text', $("#inputText").val());
        obj.append('IsHomePage', $("isHome").val());
        options.data = obj;
        options.contentType = false;
        options.processData = false;
        options.success = function (msg) {
            $("#msg").html(msg);
            Swal({
                type: 'success',
                title: 'Thanks',
                text: 'Operation is success',
            }).then(function () {

                window.location.href = "/Content/Index";
            })
        };
        options.error = function (error) {
            alert("error");
            alert(error.msg);
        };
        $.ajax(options);
    });
</script>