@model IEnumerable<Beamity.Application.DTOs.ContentDTOs.ReadContentDTO>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row justify-content-start m-1">
    <button type="button" onclick="window.location.href = '/Content/Create'" class="btn btn-outline-success">
        Create New
    </button>
</div>


<div class="modal fade" tabindex="-1" id="deleteModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title align-content-lg-start">Delete Content</h4>
                <button type="button" class="close text-lg-right" data-dismiss="modal">
                    ×
                </button>
            </div>
            <div class="modal-body">
                <h4>Are you sure you want to delete this?</h4>
                <p id="deleteModalText"></p>
            </div>
            <div class="modal-footer">
                <button type="button" id="delete" class="btn btn-primary button button4">Delete</button>
                <button type="button" id="deleteHideModal" class="btn btn-primary button button4">
                    Hide
                </button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" tabindex="-1" id="relationModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title align-content-lg-start">Create Artifact</h4>
                <button type="button" class="close text-lg-right" data-dismiss="modal">
                    ×
                </button>
            </div>
            <div class="modal-body">
                <input disabled class="artifact" />
                <input type="button" class="btn btn-primary" id="addRelation" value="Add Connection" />

                <table class="table">
                    <thead>
                        <tr>
                            <th>
                               Content
                            </th>
                            <th>
                                Beacon
                            </th>
                            <th>
                                Proximity
                            </th>
                            <th>
                                Operations
                            </th>
                        </tr>
                    </thead>
                    <tbody id="relationsBody">
                        @* list relationss *@

                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" id="relationHideModal" class="btn btn-primary button button4">
                    Hide
                </button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" tabindex="-1" id="createRelationModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title align-content-lg-start">Create Relation</h4>
                <button type="button" class="close text-lg-right" data-dismiss="modal">
                    ×
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label class="control-label">Content</label>
                        <input type="hidden" class="contentId" />
                        <input disabled class="form-control content" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Beacons</label>
                        <select id="beacons" class="form-control"></select>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Proximity</label>
                        <select id="proximity" class="form-control"></select>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="connect" class="btn btn-primary button button4">Create</button>
                <button type="button" id="createRelationHideModal" class="btn btn-primary button button4">
                    Hide
                </button>
            </div>
        </div>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.CreatedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsHomePage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsCampaign)
            </th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.CreatedTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsHomePage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsCampaign)
                </td>

                <td>
                    <a asp-controller="Content" class="btn btn-primary" asp-action="Update" asp-route-id="@item.Id">Edit  </a> |
                    <input type="button" class="btn btn-primary" id="deleteShowModal" data-name="@item.Name" data-id="@item.Id" value="Delete" />

                    @{ if (item.IsCampaign)
                        {
                            @:<input type="button" class="btn btn-primary relation" data-name="@item.Name" data-id="@item.Id" value="Connection" />
                        }}
                </td>
            </tr>
        }
    </tbody>
</table>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js">

</script>
<script src="bootstrap/js/bootstrap.min.js"></script>

<script type="text/javascript">
    function swalload() {
        swal.fire({
            title: 'Loading....',
            html: 'Please wait during the processing time',
            timer: 10000,
            onBeforeOpen: () => {
                Swal.showLoading()
                timerInterval = setInterval(() => {
                    Swal.getContent().querySelector('strong')
                        .textContent = Swal.getTimerLeft()
                }, 100)
            },
            onClose: () => {

            }
        });
    }
    $(document).ready(function () {
        $('[id="deleteShowModal"]').click(function () {
            $("#deleteModal").modal('show');
            var id = $(this).data('id');
            var name = $(this).data('name');
            $("#deleteModalText").empty();
            $("#deleteModalText").append(name).append('<input type="hidden" id="deleteModalId" />');
            $('#deleteModalId').val(id);
        });

        $("#deleteHideModal").click(function () {
            $("#deleteModal").modal('hide');
        });
    });
    $("#delete").click(function () {
        swalload();
        var options = {};
        options.url = "https://localhost:5001/api/Content/DeleteContent";
        options.type = "DELETE";
        var obj = {};
        obj.Id = $("#deleteModalId").val();
        options.data = JSON.stringify(obj);
        options.contentType = "application/json";
        options.dataType = "html";
        debugger
        options.success = function () {
            Swal({
                type: 'success',
                title: 'Thanks',
                text: 'Operation is success',
            }).then(function () {

                window.location.href = "/Content/Index";
            })
        };
        options.error = function () {
            alert("error");
        };
        $("#deleteModal").modal('hide');
        $.ajax(options);
    });

    ////Campaign Relation add////

    ////Create Realation
    $("#connect").click(function () {
        swalload();
        var options = {};
        options.url = "https://localhost:5001/api/Relation/CreateRelation/";
        options.type = "POST";
        debugger
        var obj = {};
        obj.ArtifactId = null;
        obj.ConTentId = $('.contentId').val();
        obj.BeaconId = $('#beacons').val();
        obj.LocationId = locationId;
        obj.Proximity = $('#proximity').val();
        ////Add Data/////

        options.data = JSON.stringify(obj);
        options.contentType = "application/json";
        options.dataType = "html";
        debugger
        options.success = function (msg) {
            $("#msg").html(msg);
            Swal({
                type: 'success',
                title: 'Thanks',
                text: 'Operation is success',
            }).then(function () {

                window.location.href = "/Content/Index";
            })
        };
        options.error = function () {
            $("#msg").html("Error while calling the Web API!");
        };
        $.ajax(options);
        $("#loginModal").modal('hide');
    });


    $('#addRelation').click(function () {
        ////GetAllBeacons
        var options = {};
        options.url = "https://localhost:5001/api/Beacon/GetAllBeacons";
        var obj = {};
        obj.Id = locationId;
        debugger
        options.type = "POST";
        options.dataType = "json";
        options.contentType = "application/json";
        options.data = JSON.stringify(obj);
        options.success = function (data) {
            $('[id = "beacons"]').empty();
            data.forEach(function (v) {
                $('[id = "beacons"]').append('<option value="' + v.id + '">' + v.name + '</option>');
            });
        };
        options.error = function () {
            Swal({
                type: 'error',
                title: 'Oppsss...',
                text: 'Please add beacon.',
            }).then(function () {

                window.location.href = "/";
            })
        };
        $.ajax(options);

        $("#createRelationModal").modal('show');
    });

    $("#createRelationHideModal").click(function () {
        $("#createRelationModal").modal('hide');
        $("#relationModal").modal('show');

    });
    $('.relation').on('click', SetRelations);
    $("#relationHideModal").on("click", function () {
        $("#relationModal").modal('hide');
    });

    function SetRelations() {
        $("#relationsBody").empty();
        var options = {};
        options.url = "https://localhost:5001/api/Relation/GetRelationsWithContent";
        var obj = {};
        obj.Id = $(this).data("id");
        debugger
        options.type = "POST";
        options.dataType = "json";
        options.contentType = "application/json";
        options.data = JSON.stringify(obj);
        options.success = function (data) {
            data.forEach(function (v) {
                $('[id = "relationsBody"]').append("<tr>"
                    + "<td>" + v.contentName + "</td>"
                    + "<td>" + v.beaconName + "</td>"
                    + "<td>" + v.proximity + "</td>"
                    + "<td> <input type='button' data-id='" + v.id + "' class='btn btn-primary showDeleteRelationModal' value='Delete'/></td></tr>");
            });
            //data.forEach(function (v) {
            //    $('[id = "beacons"]').append('<option value="' + v.id + '">' + v.name + '</option>');
            //});
        }
        options.error = function () {

        };
        $.ajax(options);
        debugger;
        var id = $(this).data("id");
        $(".contentId").val(id);

        var name = $(this).data("name");
        $('.content').val(name);

        $("#relationModal").modal('show');
    }
    ////Proximity
    $(document).ready(function () {
        var myobject = {
            ValueA: 'All',
            ValueB: 'Immediate',
            ValueC: 'Near',
            ValueD: 'Far',
            ValueE: 'UnKnown'
        };

        var select = document.getElementById("proximity");
        for (index in myobject) {
            select.options[select.options.length] = new Option(myobject[index], myobject[index]);
        }
    });
</script>