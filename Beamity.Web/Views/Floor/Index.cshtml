@model IEnumerable<Beamity.Application.DTOs.FloorDTOs.ReadFloorDTO>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<!--Create A New Item-->
<div class="row justify-content-start m-1">
    <button id="btnShowModal" type="button" class="btn btn-outline-success">
        Create New
    </button>
    <div class="col-md-1"></div>
</div>
<!--Create page for A New Item-->
<div class="modal fade" tabindex="-1" id="loginModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title align-content-lg-start">Create Floor</h4>
                <button type="button" class="close text-lg-right" data-dismiss="modal">
                    ×
                </button>
            </div>
            <div class="modal-body">
                <div class="container text-center">
                    <div class="form-group">
                        <input type="text" class="form-control" id="floorname" placeholder="Floor Name">
                    </div>
                    
                    <div class="form-group">
                        <select class="form-control" id="buildings"></select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="create" class="btn btn-primary button button4">Create</button>
                <button type="button" id="btnHideModal" class="btn btn-primary button button4">
                    Hide
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" tabindex="-1" id="detailModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title align-content-lg-start">Floor Details</h4>
                <button type="button" class="close text-lg-right" data-dismiss="modal">
                    ×
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <p id="detailModalText"></p>
                    <div class="form-group">
                        <input class="form-control" type="text"
                               placeholder="Name" id="editName" />
                    </div>

                    <select class="form-control" id="EditBuilding"></select>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="update" class="btn btn-primary button button4">Update</button>
                <button type="button" id="detailHideModal" class="btn btn-primary button button4">
                    Hide
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" tabindex="-1" id="deleteModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title align-content-lg-start">Create Floor</h4>
                <button type="button" class="close text-lg-right" data-dismiss="modal">
                    ×
                </button>
            </div>
            <div class="modal-body">
                <h4>Are you sure you want to delete this?</h4>

            </div>
            <div class="modal-footer">
                <button type="button" id="delete" class="btn btn-primary button button4">Delete</button>
                <button type="button" id="deleteHideModal" class="btn btn-primary button button4">
                    Hide
                </button>
            </div>
        </div>
    </div>
</div>
<div class="w-100">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BuildingName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedTime)
                </th>
                <th>Operations</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BuildingName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedTime)
                </td>
                <td>
                    <input type="button" class="btn btn-primary" data-id="@item.Id" data-name="@item.Name" value="Details" id="detailShowModal" />
                    <input type="button" class="btn btn-primary" data-id="@item.Id" data-name="@item.Name" value="Delete" id="deleteShowModal" />
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="~/package/dist/sweetalert2.js"></script>
<script src="bootstrap/js/bootstrap.min.js"></script>




<script type="text/javascript">

    

    $(document).ready(function () {
        $("#btnShowModal").click(function () {
            $("#loginModal").modal('show');
        });
        $("#btnHideModal").click(function () {
            $("#loginModal").modal('hide');
        });
    });
    $("#create").click(function () {

        var options = {};
        options.url = "https://localhost:5001/api/Floor/CreateFloor";
        options.type = "POST";
        var obj = {};
        obj.Name = $("#floorname").val();
        obj.BuildingId = $("#buildings").val();
        options.data = JSON.stringify(obj);
        options.contentType = "application/json";
        options.dataType = "html";
        options.success = function (msg) {
            $("#msg").html(msg);
            Swal({
                type: 'success',
                title: 'Thanks',
                text: 'Operation is success',
            }).then(function () {
                window.location.reload();
            })
        };
        options.error = function () {
            $("#msg").html("Error while calling the Web API!");
            alert("Hata");
        };
        $.ajax(options);
    });
    $(document).ready(function () {
        $("#deleteShowModal").click(function () {
            $("#deleteModal").modal('show');
        });

        $("#deleteHideModal").click(function () {
            $("#deleteModal").modal('hide');
        });
    });

    $(document).ready(function () {
        var options = {};
        options.url = "https://localhost:5001/api/Building/GetAllBuildings";
        options.type = "GET";
        options.dataType = "json";
        options.success = function (data) {
            data.forEach(function (v) {
                $("#buildings").append('<option value="' + v.id + '">' + v.name + '</option>');
            });
        };
        options.error = function () {
            alert("error");
        };
        $.ajax(options);
    });

    $(document).ready(function () {
        $('[id="deleteShowModal"]').click(function () {
            $("#deleteModal").modal('show');
            var id = $(this).data('id');
            var name = $(this).data('name');
            $("#deleteModalText").empty();
            debugger
            $("#deleteModalText").append(name).append('<input type="hidden" id="deleteModalId"/>');
            $('#deleteModalId').val(id);
        });

        $("#deleteHideModal").click(function () {
            $("#deleteModal").modal('hide');
        });
    });
    $("#delete").click(function () {
        var options = {};
        options.url = "https://localhost:5001/api/Floor/DeleteFloor";
        options.type = "DELETE";
        var obj = {};
        obj.Id = $("#deleteModalId").val();
        options.data = JSON.stringify(obj);
        options.contentType = "application/json";
        options.dataType = "html";
        debugger
        options.success = function () {
            Swal({
                type: 'success',
                title: 'Thanks',
                text: 'Operation is success',
            }).then(function () {

                window.location.href = "/Floor/Index";
            })
        };
        options.error = function () {
            Swal({
                type: 'error',
                title: 'Oppsss...',
                text: 'Operation is not success. The item you want to delete have a relation.',
            }).then(function () {
                window.location.href = "/Floor/Index";
            })
        };
        $("#deleteModal").modal('hide');
        $.ajax(options);
    });

    /*Update Items*/
    $(document).ready(function () {
        var options = {};
        options.url = "https://localhost:5001/api/Building/GetAllBuildings";
        options.type = "GET";
        options.dataType = "json";
        options.success = function (data) {
            data.forEach(function (v) {
                $("#EditBuilding").append('<option value="' + v.id + '">' + v.name + '</option>');
            });
        };
        options.error = function () {
            alert("error");
        };
        $.ajax(options);
    });
    $("#update").click(function () {
        var options = {};
        options.url = "https://localhost:5001/api/Floor/UpdateFloor";
        options.type = "PUT";
        var obj = {};
        obj.Id = $("#detailModalId").val();
        obj.Name = $("#editName").val();
        obj.BuildingId = $("#EditBuilding").val();
        obj.CreatedTime = $.now();

        debugger
        options.data = JSON.stringify(obj);
        options.contentType = "application/json";
        options.dataType = "html";
        debugger
        options.success = function () {
            Swal({
                type: 'success',
                title: 'Thanks',
                text: 'Operation is success',
            }).then(function () {

                window.location.href = "/Floor/Index";
            })
        };
        options.error = function () {
            Swal({
                type: 'error',
                title: 'Oppsss...',
                text: 'Operation is not success. The item you want to delete have a relation.',
            }).then(function () {
                window.location.href = "/Floor/Index";
            })
        };
        $("#detailModal").modal('hide');
        $.ajax(options);
    });
    $(document).ready(function () {
        $('[id="detailShowModal"]').click(function () {
            $("#detailModal").modal('show');

            var id = $(this).data('id');
            var name = $(this).data('name');
            var building = $(this).data('building');

            $("#editName").val(name);
            $("#EditBuilding").val(building);

            $("#detailModalText").append('<input type="hidden" id="detailModalId"/>');
            $('#detailModalId').val(id);
        });

        $("#detailHideModal").click(function () {
            $("#detailModal").modal('hide');
        });
    });
</script>

